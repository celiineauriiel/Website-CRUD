name: Build and Deploy to Google Cloud Run

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GCP_ARTIFACT_REGISTRY_LOCATION }}
  SERVICE_NAME: ${{ secrets.GCP_CLOUD_RUN_SERVICE_NAME }}
  RUN_REGION: ${{ secrets.GCP_CLOUD_RUN_REGION }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASS: ${{ secrets.DB_PASS }}
  DB_NAME: ${{ secrets.DB_NAME }}
  IMAGE_NAME: datasiswa

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, pdo_mysql, mysqli
        tools: composer

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress

    - name: Add execute permission for phpunit
      run: chmod +x vendor/bin/phpunit
      
    - name: Run PHPUnit Tests
      run: composer test
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASS: ${{ secrets.DB_PASS }}
        DB_NAME: ${{ secrets.GCP_TEST_DB_NAME }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

    - name: Build Docker image
      run: docker build --no-cache -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

    - name: Push Docker image to Artifact Registry
      run: docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE_NAME }}
        region: ${{ env.RUN_REGION }}
        image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        env_vars: |
          DB_HOST=${{ env.DB_HOST }}
          DB_USER=${{ env.DB_USER }}
          DB_PASS=${{ env.DB_PASS }}
          DB_NAME=${{ env.DB_NAME }}
        flags: '--allow-unauthenticated'

    - name: Push SUCCESS metric to Pushgateway
      if: success()
      run: |
        # PERUBAHAN: Alamat IP ditulis langsung di sini
        echo "my_app_last_deploy_timestamp_seconds{status=\"success\", commit=\"${{ github.sha }}\"} $(date +%s)" | curl --data-binary @- http://34.101.208.120:9091/metrics/job/deploy_status/instance/${{ github.run_id }}
        echo "‚úÖ Deployment Succeeded: Metric pushed to Pushgateway."

    - name: Push FAILURE metric to Pushgateway
      if: failure()
      run: |
        # PERUBAHAN: Alamat IP ditulis langsung di sini
        echo "my_app_last_deploy_timestamp_seconds{status=\"failure\", commit=\"${{ github.sha }}\"} $(date +%s)" | curl --data-binary @- http://34.101.208.120:9091/metrics/job/deploy_status/instance/${{ github.run_id }}
        echo "‚ùå Deployment Failed: Metric pushed to Pushgateway."

    - name: Show deployed URL on Success
      if: success()
      run: |
        echo "üöÄ Deployed to: ${{ steps.deploy.outputs.url }}"